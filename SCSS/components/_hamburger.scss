// ====================================================================================
//  Styling for the Hamburger menu component
// ====================================================================================

// Individual Variable settings unique to the hamburger, do not need to be stored in abstracts/_variables.scss as they're not re-used elsewhere.

// Hamburger layer settings
$hamburger-layer-color         : $white-text;
$hamburger-layer-border-radius : 0px;
$hamburger-layer-width         : 32px;
$hamburger-layer-height        : 3px;
$hamburger-layer-spacing       : 4px;

// Hamburger hover settings
$hamburger-hover-opacity       : 1;
$hamburger-hover-use-filter   : false;
$hamburger-hover-filter       : opacity(100%);

// Hamburger active settings 
$hamburger-active-hover-filter:  $hamburger-hover-filter;
$hamburger-active-layer-color  : $hamburger-layer-color;
$hamburger-active-hover-opacity: $hamburger-hover-opacity;
$hamburger-types: (elastic);

.hamburger {
    // Layout
    padding: 8px 15px;
    display: inline-block;
    cursor: pointer;
  
    // Animation properties
    transition-property: opacity, filter;
    transition-duration: 0.2s;
    transition-timing-function: linear;
  
    // Normalised 
    font: inherit;
    color: inherit;
    text-transform: none;
    background-color: transparent;
    border: 0;
    margin: 0;
    overflow: visible;

    // Hover effect
    &:hover {
      @if $hamburger-hover-use-filter == true {   filter: $hamburger-hover-filter;   }
      @else {                                     opacity: $hamburger-hover-opacity; }
    }
    // Click effect
    &.is-active {
      &:hover {
        @if $hamburger-hover-use-filter == true {  filter: $hamburger-active-hover-filter;   }
        @else {                                    opacity: $hamburger-active-hover-opacity; }
      }
  
      .hamburger-inner,
      .hamburger-inner::before,
      .hamburger-inner::after {   background-color: $hamburger-active-layer-color;  }
    }
  }
  .hamburger-box {
    width: $hamburger-layer-width;
    height: $hamburger-layer-height * 3 + $hamburger-layer-spacing * 2;
    display: inline-block;
    position: relative;
  }
  .hamburger-inner {
    display: block;
    top: 50%;
    margin-top: $hamburger-layer-height / -2;
  
    &,
    &::before,
    &::after {
      // Layout
      width: $hamburger-layer-width;
      height: $hamburger-layer-height;
      background-color: $hamburger-layer-color;
      border-radius: $hamburger-layer-border-radius;
      position: absolute;

      // Transition settings
      transition-property: transform;
      transition-duration: 0.15s;
      transition-timing-function: ease;
    }
  
    &::before,
    &::after {
      content: "";
      display: block;
    }
    &::before { top: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;   } 
    &::after { bottom: ($hamburger-layer-spacing + $hamburger-layer-height) * -1; }
  }

// ====================================================================================
// End of styling for the hamburger component
// ====================================================================================

// ====================================================================================
// Media Queries for the hamburger component
// ====================================================================================
  